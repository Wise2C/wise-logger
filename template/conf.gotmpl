input {
    file {
        path => ["/host/var/log/*"]
        codec => plain { charset => "GBK" }
        discover_interval => 120
        stat_interval => 2
        sincedb_path => "/host/var/log/sincedb"
        exclude => "sincedb"
    }{{ range $k, $v := .Containers }}
    {{ range $v.LogType }}{{ if eq . "UM" }}
    file {
        path => ["/logs/{{ $v.MountSource }}/*/common-all*.log"]
        codec => plain { charset => "GBK" }
        discover_interval => 120
        stat_interval => 2
        sincedb_path => "/logs/{{ $v.MountSource }}/sincedb1"
        add_field => { "stack" => "{{ $v.Stack }}" }
        add_field => { "service" => "{{ $v.Service }}" }
        add_field => { "index" => "{{ $v.Index}}" }
        add_field => { "HOST" => "{{ $v.Host }}" }
    }
    file {
        path => "/logs/{{ $v.MountSource }}/*/*.acc"
        discover_interval => 120
        stat_interval => 1
        sincedb_path => "/logs/{{ $v.MountSource }}/sincedb2"
        add_field => { "stack" => "{{ $v.Stack }}" }
        add_field => { "service" => "{{ $v.Service }}" }
        add_field => { "index" => "{{ $v.Index}}" }
        add_field => { "HOST" => "{{ $v.Host }}" }
    }{{ else if eq . "NONE" }}
    file {
        path => ["/jsonfile/{{ $v.ID }}/*.log"]
        codec => plain { charset => "GBK" }
        discover_interval => 120
        stat_interval => 2
        sincedb_path => "/jsonfile/{{ $v.ID }}/sincedb"
        add_field => { "stack" => "{{ $v.Stack }}" }
        add_field => { "service" => "{{ $v.Service }}" }
        add_field => { "index" => "{{ $v.Index}}" }
        add_field => { "HOST" => "{{ $v.Host }}" }
    }{{ end }}{{ end }}{{ end }}
}

output {
    {{ if ne .Vars.kafkaBrokerList "" }}kafka {
        bootstrap_servers => "{{ .Vars.kafkaBrokerList }}"
        topic_id => {{ .Vars.kafkaTopic }}
        batch_size => 2
    }{{ else }}stdout { }{{ end }}
}